{"version":3,"sources":["components/AddProject.js","components/ProjectDisplay.js","components/TaskLengthTitle.js","components/AddTask.js","components/TaskDisplay.js","services/projects.js","App.js","index.js"],"names":["AddProject","addProjectName","handleProjectName","projectName","className","onSubmit","type","placeholder","onChange","value","ProjectDisplay","getIdAndTitle","deleteProject","project","map","p","onClick","id","TaskLengthTitle","taskLength","AddTask","addTaskName","handleTaskName","taskName","TaskDisplay","deleteTask","filterProject","length","a","task","url","axios","get","post","number","delete","object","put","App","useState","setProjectName","projectTitle","setProjectTitle","projectId","setProjectId","setTaskLength","setTaskName","setFilterProject","setProject","useEffect","projectService","then","response","data","e","preventDefault","containsProject","emptyField","newProject","i","alert","console","log","concat","target","tempProject","filter","Number","projects","filterProjectList","projectIdentify","withoutProjects","Object","entries","key","backToObject","fromEntries","empty","contains","push","deleteObj","remainingTasks","currentIndex","findIndex","tempArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2db3fe58.chunk.js","sourcesContent":["const AddProject = ({ addProjectName, handleProjectName, projectName }) => {\r\n\r\n    return (\r\n        <div className=\"add-elements\">\r\n            <form onSubmit={addProjectName}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"add a project\"\r\n                    className=\"task-adder\"\r\n                    onChange={handleProjectName}\r\n                    value={projectName}\r\n\r\n                >\r\n                </input>\r\n                <button>Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProject","const ProjectDisplay = ({ getIdAndTitle, deleteProject, project }) => {\r\n    return (\r\n        <div className=\"project-list-display\">\r\n\r\n            {project.map(p => {\r\n                return (\r\n                    <div className=\"individual-project\" key={p.projectName}>\r\n                        <label className=\"project-label\" onClick={getIdAndTitle} id={p.id}>\r\n                            {p.projectName}\r\n                        </label>\r\n                        <button className=\"task-button\" onClick={deleteProject} id={p.id}>Delete Project</button>\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectDisplay","const TaskLengthTitle = ({ taskLength }) => {\r\n    return (\r\n        <p>You have {taskLength} things left to do!</p>\r\n    )\r\n}\r\n\r\nexport default TaskLengthTitle","const AddTask = ({ addTaskName, handleTaskName, taskName }) => {\r\n\r\n    return (\r\n        <form onSubmit={addTaskName}>\r\n            <input\r\n                id=\"add\"\r\n                type=\"text\"\r\n                placeholder=\"add a task to this project\"\r\n                className=\"task-adder\"\r\n                onChange={handleTaskName}\r\n                value={taskName}\r\n            >\r\n\r\n            </input>\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default AddTask","const TaskDisplay = ({ deleteTask, filterProject }) => {\r\n\r\n    if (filterProject.length !== 0) {\r\n        return (\r\n            <div>\r\n                {filterProject.map(a => {\r\n                    return (\r\n                        <div className=\"individual-todo\" key={a.task}>\r\n                            <label>{a.task}</label>\r\n                            <br></br>\r\n                            <button className=\"task-button\" onClick={deleteTask} id={a.task}>Finished task</button>\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskDisplay","import axios from 'axios'\r\n\r\nconst url = `/api/projects`\r\n\r\nconst getProject = () => {\r\n    return axios.get(url)\r\n}\r\n\r\nconst postProject = (project) => {\r\n    return axios.post(url, project)\r\n}\r\n\r\nconst deleteProject = (number) => {\r\n    return axios.delete(`${url}/${number}`)\r\n}\r\n\r\nconst modify = (number, object) => {\r\n    return axios.put(`${url}/${number}`, object)\r\n}\r\n\r\nexport default { getProject, postProject, deleteProject, modify }","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport AddProject from \"./components/AddProject\"\nimport ProjectDisplay from \"./components/ProjectDisplay\"\nimport TaskLengthTitle from \"./components/TaskLengthTitle\"\nimport AddTask from \"./components/AddTask\"\nimport TaskDisplay from \"./components/TaskDisplay\"\nimport projectService from \"./services/projects\"\n\n\nconst App = () => {\n  const [projectName, setProjectName] = useState(\"\")\n  const [projectTitle, setProjectTitle] = useState(\"\")\n  const [projectId, setProjectId] = useState(0)\n  const [taskLength, setTaskLength] = useState(0)\n  const [taskName, setTaskName] = useState(\"\")\n  const [filterProject, setFilterProject] = useState([])\n  const [project, setProject] = useState([])\n\n  const hook = () => {\n    projectService\n      .getProject()\n      .then(response => {\n        //console.log('promise fulfilled')\n        setProject(response.data)\n      })\n  }\n  useEffect(hook, [])\n\n  const handleProjectName = (e) => {\n    //console.log(e.target.value)\n    setProjectName(e.target.value)\n  }\n\n  const getIdAndTitle = (e) => {\n    const tempProject = project.filter(p => p.id === Number(e.target.id))\n    //console.log(tempProject[0].projects)\n    setTaskLength(tempProject[0].projects.length)\n    setProjectTitle(tempProject[0].projectName)\n    setFilterProject(tempProject[0].projects)\n    setProjectId(e.target.id)\n  }\n\n  const handleTaskName = (e) => {\n    //console.log(e.target.value)\n    setTaskName(e.target.value)\n  }\n\n  const addTaskName = (e) => {\n    //console.log(e.target.value)\n    e.preventDefault()\n    const projectIdentify = project.filter(p => p.id === Number(projectId))\n    //console.log(projectIdentify)\n    const asArray = Object.entries(projectIdentify[0])\n    const withoutProjects = asArray.filter(([key, value]) => key !== \"projects\")\n    //console.log(withoutProjects)\n    const backToObject = Object.fromEntries(withoutProjects)\n\n    let empty = false\n    let contains = false\n\n    for (let i = 0; i < projectIdentify[0].projects.length; i++) {\n      if (projectIdentify[0].projects[i].task === taskName) {\n        alert(\"This task has already been entered!\")\n        contains = true;\n        break;\n      }\n    }\n\n    if (taskName === \"\") {\n      alert(\"Please enter a task!\")\n      empty = true;\n    }\n\n    if (!empty && !contains) {\n      backToObject[\"task\"] = taskName\n      projectIdentify[0].projects.push({ task: taskName })\n      //console.log(backToObject)\n\n      projectService\n        .modify(projectId, backToObject)\n        .then(response => {\n          //console.log(response)\n          setTaskLength(projectIdentify[0].projects.length)\n          setFilterProject(projectIdentify[0].projects)\n        })\n    }\n\n    setTaskName(\"\")\n\n  }\n\n  const deleteTask = (e) => {\n    const deleteObj = { task: e.target.id }\n    const currentProject = project.filter(p => p.id === Number(projectId))\n    const remainingTasks = currentProject[0].projects.filter(p => p.task !== e.target.id)\n    const currentIndex = project.findIndex(p => p.id === Number(projectId))\n\n    projectService\n      .modify(projectId, deleteObj)\n      .then(response => {\n        //console.log(response)\n        const tempArr = [...project]\n        tempArr[currentIndex].projects = remainingTasks\n        setProject(tempArr)\n        setFilterProject(remainingTasks)\n        setTaskLength(remainingTasks.length)\n      })\n  }\n\n  const deleteProject = (e) => {\n    //console.log(e.target.id)\n    const filterProjectList = project.filter(p => p.id !== Number(e.target.id))\n    //console.log(filterProjectList)\n\n    projectService\n      .deleteProject(e.target.id)\n      .then(response => {\n        console.log(response)\n        setProject(filterProjectList)\n        setProjectTitle(\"\")\n        setFilterProject([])\n      })\n    //console.log(filterProjectList)\n    setTaskLength(0)\n  }\n\n  const addProjectName = (e) => {\n    e.preventDefault()\n    let containsProject = false;\n    let emptyField = false;\n\n    const generateId = () => {\n      if (project.length === 0) {\n        return 1;\n      } else {\n        return project[project.length - 1].id + 1\n      }\n    }\n\n    const newProject = {\n      projectName: projectName,\n      id: generateId()\n    }\n\n    for (let i = 0; i < project.length; i++) {\n      if (project[i].projectName === projectName) {\n        alert(\"Please enter a different project!\")\n        containsProject = true;\n        break;\n      }\n    }\n\n    if (projectName === \"\") {\n      alert(\"Please add a project!\")\n      emptyField = true;\n    }\n\n    if (!emptyField && !containsProject) {\n      projectService\n        .postProject(newProject)\n        .then(response => {\n          console.log(response)\n          setProject(project.concat(response.data))\n        })\n    }\n\n    setProjectName(\"\")\n\n    //console.log(project)\n  }\n\n\n  return (\n    <div className=\"whole-project\">\n\n      <div className=\"add-projects-container\">\n        <h1>Add Project</h1>\n        <AddProject addProjectName={addProjectName} handleProjectName={handleProjectName} projectName={projectName} />\n        <ProjectDisplay getIdAndTitle={getIdAndTitle} deleteProject={deleteProject} project={project} />\n      </div>\n\n      <div className=\"todo-list\">\n        <h1>{projectTitle}</h1>\n\n        <div className=\"add-elements\">\n          <AddTask addTaskName={addTaskName} handleTaskName={handleTaskName} taskName={taskName} />\n          <TaskLengthTitle taskLength={taskLength} />\n        </div>\n\n        <div className=\"todo-list-display\">\n          <TaskDisplay deleteTask={deleteTask} filterProject={filterProject} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}